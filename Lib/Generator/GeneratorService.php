<?php
/**
 * Created by PhpStorm.
 * User: istvan
 * Date: 2018. 11. 20.
 * Time: 10:49
 */

namespace Lib\Generator;

use Lib\Generator\ConceptClassGenerator;
use Lib\Generator\GeneratorPathBuilderService;
use Seld\JsonLint\JsonParser;

/**
 * Class GeneratorService
 * @package Lib\Generator
 */
class GeneratorService
{

    /**
     * @var array $conceptSourceFiles
     */
    private static $conceptSourceFiles = [];
    /**
     * @var string
     */
    public static $wheelVersion = '0.0.1';
    /**
     * @var string
     */
    public static $conceptsRootDir = 'Wheel/Concept';

    /**
     * @param $conceptJsonFile
     * @throws
     */
    function generateConceptSource($conceptJsonFile)
    {
        $concept = $this->loadDefinition($conceptJsonFile);
        $conceptGenerator = new ConceptClassGenerator(GeneratorPathBuilderService::getConceptRootRelativePathElements([
            $concept['name'],
            'php'
        ]));

        $conceptGenerator->generateConceptClass($concept);
    }

    /**
     *
     * Loads concept definition json file
     *
     * @param $conceptJsonFile
     * @return mixed
     * @throws \Swaggest\JsonSchema\Exception
     * @throws \Swaggest\JsonSchema\InvalidValue
     */
    function loadDefinition($conceptJsonFile)
    {
        // todo: rubric definition can contain two attributes with the same name
        // todo: concept definition can contain two rubrics with the same name

        // Loads Json file
        $conceptJson = @file_get_contents($conceptJsonFile);
        if ($conceptJson === false) {
            echo "File $conceptJsonFile doesn't exist.\n";
            die();
        }

        // Validate Json string by JsonLint
        $parser = new JsonParser();
        try {
            $parser->parse($conceptJson, JsonParser::DETECT_KEY_CONFLICTS);
        } catch (\Exception $e) {
            echo $e->getMessage() . "\n";
            die();
        }

        $concept = json_decode($conceptJson, true);

        if (!$concept) {
            echo "Invalid concept json file.\n";
            die();
        }

        // Loads concept schema json file
        $schemaJson = @file_get_contents('conceptSchema.json');
        if ($schemaJson === false) {
            echo "Missing conceptSchema.json file.\n";
            die();
        }

        $schema = json_decode($schemaJson);
        if (!$schema) {
            echo "Invalid conceptSchema.json file.\n";
            die();
        }

        $schema = \Swaggest\JsonSchema\Schema::import($schema);

        // Validates loaded Json string against concept schema rules
        try {
            $schema->in(json_decode($conceptJson));
        } catch (\Swaggest\JsonSchema\InvalidValue $e) {
            echo($e->getMessage() . "\n");
            die();
        }

        return $concept;
    }

    /**
     * @param $file
     */
    public static function addFileCommentBlock(\Nette\PhpGenerator\PhpFile $file)
    {
        $file->addComment('Generated by Wheel ' . self::$wheelVersion);
        $file->addComment('Date: ' . date('Y. m. d.'));
        $file->addComment('Time: ' . date('H:i:s'));
        $file->addComment('');
        $file->addComment('This is an auto-generated source file, do not modify it!');
    }

}